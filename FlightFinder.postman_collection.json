{
	"info": {
		"_postman_id": "f7744b12-dba3-4ea4-ab54-60dc100f8b6a",
		"name": "FlightFinder",
		"description": "This documentation contains numberous API operations for <b>Flight Finder</b> Web application.\n\nThe application was also made along with <b>Amadeus Air Api Search</b> to make operations for searching flight offers more efficient and faster.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "User & Authorization",
			"item": [
				{
					"name": "1.1. Login as userone1 and Save JWT token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.environment.set(\"jwt_token\", data.jwtToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"userone1\",\r\n    \"password\": \"userone1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>Performs a User Authentication.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>LoginDTO</b>\n<p>DTO class for a User Authentication.</p>\n<ul>\n<li><b>username</b><sup><b>*</b></sup></li>\n<li><b>password</b><sup><b>*</b></sup></li>\n</ul>\n<b>User DTO</b>\n<p>DTO class containing a User Information.</p>\n<ul>\n<li><b>username</b></li>\n<li><b>jwtToken</b></li>\n<p>JSON Web Token that contains a claim informations of a authenticated User.</p>\n<li><b>airToken</b></li>\n<p>OAuth2 token that allows user to access Amadeus Air Api Services. This token is generated as the part of claim of the JSON Web Token.</p>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Generates a User DTO along with JWT token.</p>\n<li><b>400</b></li>\n<p>Failed Data Validation.</p>\n<li><b>403</b></li>\n<p>Invalid Username/Password!</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "1.2. Login - Unauthorized - Invalid Credentials",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"wrong\",\r\n    \"password\": \"wronguser\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of a failed User Authentication due invalid user credentials.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>LoginDTO</b>\n<p>DTO class for User Authentication.</p>\n<ul>\n<li><b>username</b><sup><b>*</b></sup></li>\n<li><b>password</b><sup><b>*</b></sup></li>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>403</b></li>\n<p>Invalid Username/Password!</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "1.3. Login - Bad Request - Failed Validation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of a failed User Authentication due not passing data validation.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>LoginDTO</b>\n<p>DTO class for a User Authentication.</p>\n<ul>\n<li><b>username</b><sup><b>*</b></sup></li>\n<li><b>password</b><sup><b>*</b></sup></li>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>403</b></li>\n<p>Failed Data Validation</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "2.1. Register As New User",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"userthree3\",\r\n    \"password\": \"userthree3\",\r\n    \"email\": \"userthree3@test.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>Performs operation for creating a new User account.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>RegisterDTO</b>\n<p>DTO class for creating a new User account.</p>\n<ul>\n<li>\n<b>username</b><sup><b>*</b></sup>\n<ul>\n<li>Must be unique username.</li>\n<li>Must contain 6-55 characters.</li>\n<li>Alphanumeric letters only.</li>\n<li>No Whitespaces.</li>\n</ul>\n</li>\n<li>\n<b>password</b><sup><b>*</b></sup>\n<ul>\n<li>Must contain 8-80 characters.</li>\n<li>Alphanumeric letters only.</li>\n</ul>\n<li>\n<b>email</b><sup><b>*</b></sup>\n<ul>\n<li>Must be unique e-mail address.</li>\n</ul>\n</li>\n</ul>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Registration success.</p>\n<li><b>400</b></li>\n<p>Failed Data Validation.</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "2.2. Login As userthree3 and Save JWT token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.environment.set(\"jwt_token\", data.jwtToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"userthree3\",\r\n    \"password\": \"userthree3\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of performing User Authentication with newly created user as <i>userthree3</i>.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>LoginDTO</b>\n<p>DTO class for User Authentication.</p>\n<ul>\n<li><b>username</b><sup><b>*</b></sup></li>\n<li><b>password</b><sup><b>*</b></sup></li>\n</ul>\n<b>User DTO</b>\n<p>DTO class containing a User Information.</p>\n<ul>\n<li><b>username</b></li>\n<li><b>jwtToken</b></li>\n<p>JSON Web Token that contains claim informations of authenticated User.</p>\n<li><b>airToken</b></li>\n<p>OAuth2 token that allows user to access Amadeus Air Api Services. This token is generated as the part of claim of the JSON Web Token.</p>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Generates a User DTO along with JWT token</p>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Invalid Username/Password!</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "2.3. Get userthree3 User Information",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/api/user",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"user"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>GET</p>\n<h6>Description</h6>\n<p>Retrieves information of the current User.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<b>User DTO</b>\n<p>DTO class containing a User Information.</p>\n<ul>\n<li><b>username</b></li>\n<li><b>jwtToken</b></li>\n<p>JSON Web Token that contains claim informations of authenticated User.</p>\n<li><b>airToken</b></li>\n<p>OAuth2 token that allows user to access Amadeus Air Api Services. This token is generated as the part of claim of the JSON Web Token.</p>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Retrieves a User DTO.</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "2.4. Get userthree3 Air Api token",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/airtoken",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"airtoken"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>GET</p>\n<h6>Description</h6>\n<p>Retrieves an Air Api Token of the current User.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<b>User DTO</b>\n<p>DTO class containing User Information.</p>\n<ul>\n<li><b>username</b></li>\n<li><b>jwtToken</b></li>\n<p>JSON Web Token that contains claim informations of authenticated User.</p>\n<li><b>airToken</b></li>\n<p>OAuth2 token that allows user to access Amadeus Air Api Services. This token is generated as the part of claim of the JSON Web Token.</p>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Retrieves Ua ser DTO.</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "2.5. Register - Bad Request - Failed Validation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"2 as /\",\r\n    \"password\": \"asd\",\r\n    \"email\": \"asd\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of failed User Registration.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>RegisterDTO</b>\n<p>DTO class for creating a new User account.</p>\n<ul>\n<li>\n<b>username</b><sup><b>*</b></sup>\n<ul>\n<li>Must be unique username.</li>\n<li>Must contain 6-55 characters.</li>\n<li>Alphanumeric letters only.</li>\n<li>No Whitespaces.</li>\n</ul>\n</li>\n<li>\n<b>password</b><sup><b>*</b></sup>\n<ul>\n<li>Must contain 8-80 characters.</li>\n<li>Alphanumeric letters only.</li>\n</ul>\n<li>\n<b>email</b><sup><b>*</b></sup>\n<ul>\n<li>Must be unique e-mail address.</li>\n</ul>\n</li>\n</ul>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>400</b></li>\n<p>Failed Data Validation.</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "2.6. Register - Bad Request - Username/Email already taken!",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"userone1\",\r\n    \"password\": \"userthree3\",\r\n    \"email\": \"userone1@test.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/register",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"register"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of failed User Registration.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>RegisterDTO</b>\n<p>DTO class for creating a new User account.</p>\n<ul>\n<li>\n<b>username</b><sup><b>*</b></sup>\n<ul>\n<li>Must be unique username.</li>\n<li>Must contain 6-55 characters.</li>\n<li>Alphanumeric letters only.</li>\n<li>No Whitespaces.</li>\n</ul>\n</li>\n<li>\n<b>password</b><sup><b>*</b></sup>\n<ul>\n<li>Must contain 8-80 characters.</li>\n<li>Alphanumeric letters only.</li>\n</ul>\n<li>\n<b>email</b><sup><b>*</b></sup>\n<ul>\n<li>Must be unique e-mail address.</li>\n</ul>\n</li>\n</ul>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>400</b></li>\n<p>Failed Data Validation.</p>\n</ul>\n</div>"
					},
					"response": []
				}
			],
			"description": "<h6>Description</h6>\n<p>Contains API operations for User model.</p>",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwt_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Flight Search",
			"item": [
				{
					"name": "1. Login as userone1 and Save JWT token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = pm.response.json();\r",
									"pm.environment.set(\"jwt_token\", data.jwtToken);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "",
								"value": "",
								"type": "text",
								"disabled": true
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"username\": \"userone1\",\r\n    \"password\": \"userone1\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/login",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"login"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of performing User Authentication as <i>userone1</i>.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>LoginDTO</b>\n<p>DTO class for User Authentication.</p>\n<ul>\n<li><b>username</b><sup><b>*</b></sup></li>\n<li><b>password</b><sup><b>*</b></sup></li>\n</ul>\n<b>User DTO</b>\n<p>DTO class containing User Information.</p>\n<ul>\n<li><b>username</b></li>\n<li><b>jwtToken</b></li>\n<p>JSON Web Token that contains claim informations of authenticated User.</p>\n<li><b>airToken</b></li>\n<p>OAuth2 token that allows user to access Amadeus Air Api Services. This token is generated as the part of claim of the JSON Web Token.</p>\n</ul>\n</div>\n<div>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Generates a User DTO along with JWT token</p>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Invalid Username/Password!</p>\n</ul>\n</div>"
					},
					"response": []
				},
				{
					"name": "2.1.  Search Flight Offers - Example 1",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{jwt_token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"originLocationCode\": \"SYD\",\r\n    \"destinationLocationCode\": \"MAD\",\r\n    \"departureDate\": \"2021-05-14\",\r\n    \"returnDate\": \"2021-05-20\",\r\n    \"passengerCount\": \"2\",\r\n    \"currencyCode\": \"EUR\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/flight/search",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"flight",
								"search"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of retrieving the list of Flight Offers by calling Amadeus Air Api.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>FlightDTO</b>\n<p>DTO class for searching Flight Offers from Amadeus Air Api.</p>\n<ul>\n<li>\n<b>originLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code from which the traveler will depart, e.g. BOS for Boston.</p>\n<ul>\n<li>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>destinationLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code to which the traveler is going, e.g. PAR for Paris.</p>\n<ul>\n<lI>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>departureDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the origin to go to the destination.</p>\n<ul>\n<lI>Future Date only.</li>\n</ul>\n</li>\n<li>\n<b>returnDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found.</p>\n<ul>\n<lI>Future Date only.</li>\n<li>Return Date must not be before Departure Date.</li>\n</ul>\n</li>\n<li>\n<b>passengerCount</b><sup><b>*</b></sup>\n<p>The number of passengers (adults only).</p>\n<ul>\n<li>Passenger count must be between 1 and 9.</li>\n</ul>\n</li>\n<li>\n<b>currencyCode</b>\n<p>Currency Type of Flight Offer.</p>\n<ul>\n<li>Accepted currency types: USD, EUR, HRK.</li>\n</ul>\n</li>\n</ul>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Retrieves the list of Flight Offers converted into FlightDTO</p>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n<li><b>500</b></li>\n<p>Internal server error.</p>\n</ul>"
					},
					"response": []
				},
				{
					"name": "2.2.  Search Flight Offers - Example 1 Copy",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"originLocationCode\": \"SYD\",\r\n    \"destinationLocationCode\": \"BKK\",\r\n    \"departureDate\": \"2021-05-13\",\r\n    \"passengerCount\": \"1\",\r\n    \"currencyCode\": \"\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/flight/search",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"flight",
								"search"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>A another example of retrieving list of Flight Offers by calling Amadeus Air Api.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>FlightDTO</b>\n<p>DTO class for searching Flight Offers from Amadeus Air Api.</p>\n<ul>\n<li>\n<b>originLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code from which the traveler will depart, e.g. BOS for Boston.</p>\n<ul>\n<li>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>destinationLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code to which the traveler is going, e.g. PAR for Paris.</p>\n<ul>\n<lI>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>departureDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the origin to go to the destination.</p>\n<ul>\n<lI>Future Date only.</li>\n</ul>\n</li>\n<li>\n<b>returnDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found.</p>\n<ul>\n<lI>Future Date only.</li>\n<li>Return Date must not be before Departure Date.</li>\n</ul>\n</li>\n<li>\n<b>passengerCount</b><sup><b>*</b></sup>\n<p>The number of passengers (adults only).</p>\n<ul>\n<li>Passenger count must be between 1 and 9.</li>\n</ul>\n</li>\n<li>\n<b>currencyCode</b>\n<p>Currency Type of Flight Offer.</p>\n<ul>\n<li>Accepted currency types: USD, EUR, HRK.</li>\n</ul>\n</li>\n</ul>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Retrieves the list of Flight Offers converted into FlightDTO</p>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n<li><b>500</b></li>\n<p>Internal server error.</p>\n</ul>"
					},
					"response": []
				},
				{
					"name": "3.1. Save Flight Offer",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"originLocationCode\": \"SYD\",\r\n    \"destinationLocationCode\": \"BKK\",\r\n    \"departureDate\": \"2021-05-13\",\r\n    \"returnDate\": \"2021-05-16\",\r\n    \"passengerCount\": 1,\r\n    \"transferCount\": 4,\r\n    \"currencyCode\": \"EUR\",\r\n    \"totalPrice\": 644.81\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/flight/save",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"flight",
								"save"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of saving the selected Flight Offer.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>FlightDTO</b>\n<p>DTO class that represents a Flight Offer.</p>\n<ul>\n<li>\n<b>originLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code from which the traveler will depart, e.g. BOS for Boston.</p>\n<ul>\n<li>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>destinationLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code to which the traveler is going, e.g. PAR for Paris.</p>\n<ul>\n<lI>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>departureDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the origin to go to the destination.</p>\n</li>\n<li>\n<b>returnDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found.</p>\n</li>\n<li>\n<b>passengerCount</b><sup><b>*</b></sup>\n<p>The number of passengers (adults only).</p>\n<ul>\n<li>Passenger count must greater than zero.</li>\n</ul>\n</li>\n<li>\n<b>transferCount</b><sup><b>*</b></sup>\n<p>The number of flight transfers.</p>\n<ul>\n<li>Passenger count must greater than zero.</li>\n</ul>\n</li>\n<li>\n<b>currencyCode</b>\n<p>Currency Type of Flight Offer.</p>\n<ul>\n<li>Accepted currency types: USD, EUR, HRK.</li>\n</ul>\n</li>\n</ul>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Saved a Flight Offer!</p>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n<li><b>500</b></li>\n<p>Internal server error.</p>\n</ul>"
					},
					"response": []
				},
				{
					"name": "3.2. Get All Saved Flight Offers",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Be",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{url}}/api/flight/save",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"flight",
								"save"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>GET</p>\n<h6>Description</h6>\n<p>Retrieves the list of locally saved Flight Offers that's associated with the current User.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>FlightDTO</b>\n<p>DTO class that represents a Flight Offer.</p>\n<ul>\n<li>\n<b>originLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code from which the traveler will depart, e.g. BOS for Boston.</p>\n<ul>\n<li>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>destinationLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code to which the traveler is going, e.g. PAR for Paris.</p>\n<ul>\n<lI>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>departureDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the origin to go to the destination.</p>\n</li>\n<li>\n<b>returnDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found.</p>\n</li>\n<li>\n<b>passengerCount</b><sup><b>*</b></sup>\n<p>The number of passengers (adults only).</p>\n<ul>\n<li>Passenger count must greater than zero.</li>\n</ul>\n</li>\n<li>\n<b>transferCount</b><sup><b>*</b></sup>\n<p>The number of flight transfers.</p>\n<ul>\n<li>Passenger count must greater than zero.</li>\n</ul>\n</li>\n<li>\n<b>currencyCode</b>\n<p>Currency Type of Flight Offer.</p>\n<ul>\n<li>Accepted currency types: USD, EUR, HRK.</li>\n</ul>\n</li>\n</ul>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Retrieves the list of locally saved Flight Offers converted into FlightDTO.</p>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n<li><b>500</b></li>\n<p>Internal server error.</p>\n</ul>"
					},
					"response": []
				},
				{
					"name": "3.3. Delete Saved Flight Offer By Id",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/api/flight/save/4",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"flight",
								"save",
								"4"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>DELETE</p>\n<h6>Description</h6>\n<p>Deletes a selected locally saved Flight Offer that's associated with the current User.</p>\n</div>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Deleted a selected Flight Offer.</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n<li><b>500</b></li>\n<p>Internal server error.</p>\n</ul>"
					},
					"response": []
				},
				{
					"name": "3.4. Save Flight Offfer - Bad Request - Failed Validation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"originLocationCode\": \"SYD\",\r\n    \"destinationLocationCode\": \"MAD\",\r\n    \"departureDate\": \"2021-06-14\",\r\n    \"passengerCount\": 2,\r\n    \"transferCount\": 2\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/flight/save",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"flight",
								"save"
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of not correctly saving the selected Flight Offer.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<p><b>*</b> - Required</p>\n<b>FlightDTO</b>\n<p>DTO class that represents a Flight Offer.</p>\n<ul>\n<li>\n<b>originLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code from which the traveler will depart, e.g. BOS for Boston.</p>\n<ul>\n<li>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>destinationLocationCode</b><sup><b>*</b></sup>\n<p>City/Airport IATA code to which the traveler is going, e.g. PAR for Paris.</p>\n<ul>\n<lI>Must contain 2-4 characters.</li>\n<li>Uppercase letters only.</li>\n<li>Alphabet letters only.</li>\n<li>No Whitespaces!</li>\n</ul>\n</li>\n<li>\n<b>departureDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the origin to go to the destination.</p>\n</li>\n<li>\n<b>returnDate</b><sup><b>*</b></sup>\n<p>The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found.</p>\n</li>\n<li>\n<b>passengerCount</b><sup><b>*</b></sup>\n<p>The number of passengers (adults only).</p>\n<ul>\n<li>Passenger count must greater than zero.</li>\n</ul>\n</li>\n<li>\n<b>transferCount</b><sup><b>*</b></sup>\n<p>The number of flight transfers.</p>\n<ul>\n<li>Passenger count must greater than zero.</li>\n</ul>\n</li>\n<li>\n<b>currencyCode</b>\n<p>Currency Type of Flight Offer.</p>\n<ul>\n<li>Accepted currency types: USD, EUR, HRK.</li>\n</ul>\n</ul>\n</li>\n<h6>Responses</h6>\n<ul>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n<li><b>500</b></li>\n<p>Internal server error.</p>\n</ul>"
					},
					"response": []
				},
				{
					"name": "4.1. Search Saved Flight Offers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"destinationLocationCode\": \"MAD\",\r\n    \"departureDate\": \"2021-06-14\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/api/flight/save/search",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"flight",
								"save",
								"search"
							],
							"query": [
								{
									"key": "departureDate",
									"value": "2018-11-01",
									"disabled": true
								}
							]
						},
						"description": "<div>\n<h6>Api Method</h6>\n<p>POST</p>\n<h6>Description</h6>\n<p>An example of retrieving the list of locally saved Flight Offers that's associated to the current User.</p>\n</div>\n<div>\n<h6>Fields</h6>\n<b>FlightDTO</b>\n<p>DTO class for searching Flight Offers from Amadeus Air Api.</p>\n<ul>\n<li>\n<b>originLocationCode</b>\n<p>City/Airport IATA code from which the traveler will depart, e.g. BOS for Boston.</p>\n</li>\n<li>\n<b>destinationLocationCode</b><sup>\n<p>City/Airport IATA code to which the traveler is going, e.g. PAR for Paris.</p>\n</li>\n<li>\n<b>departureDate</b>\n<p>The date on which the traveler will depart from the origin to go to the destination.</p>\n<ul>\n<li>Future Date only.</li>\n</ul>\n</li>\n<li>\n<b>returnDate</b><sup>\n<p>The date on which the traveler will depart from the destination to return to the origin. If this parameter is not specified, only one-way itineraries are found.</p>\n</li>\n<li>\n<b>passengerCount</b><sup><b>*</b></sup>\n<p>The number of passengers (adults only).</p>\n<ul>\n<li>Passenger count greater than zero.</li>\n</ul>\n</li>\n<li>\n<b>currencyCode</b>\n<p>Currency Type of Flight Offer.</p>\n<ul>\n<li>Accepted currency types: USD, EUR, HRK.</li>\n</ul>\n</li>\n</ul>\n<h6>Responses</h6>\n<ul>\n<li><b>200</b></li>\n<p>Retrieves the list of locally saved Flight Offers converted into FlightDTO</p>\n<li><b>400</b></li>\n<p>Failed Data Validation</p>\n<li><b>403</b></li>\n<p>Unauthorized access!</p>\n<li><b>500</b></li>\n<p>Internal server error.</p>\n</ul>"
					},
					"response": []
				}
			],
			"description": "Contains API operations for flight searches. Air Api Token is required due most of the operations involving calling services from Amadeus Air Api and retrieving data from it.",
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "{{jwt_token}}",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "localhost:8090"
		}
	]
}